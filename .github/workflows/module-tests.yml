---
name: Individual Module Tests

on:
  workflow_dispatch:
    inputs:
      module_name:
        description: 'Module to test (e.g., technitium_dns_add_record)'
        required: true
        type: choice
        options:
          - technitium_dns_add_record
          - technitium_dns_delete_record
          - technitium_dns_update_record
          - technitium_dns_get_record
          - technitium_dns_create_zone
          - technitium_dns_delete_zone
          - technitium_dns_get_zone_info
          - technitium_dns_get_zone_options
          - technitium_dns_set_zone_options
          - technitium_dns_sign_zone
          - technitium_dns_unsign_zone
          - technitium_dns_enable_zone
          - technitium_dns_disable_zone
          - technitium_dns_convert_to_nsec
          - technitium_dns_convert_to_nsec3
          - technitium_dns_get_dnssec_properties

jobs:
  module-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ansible requests urllib3

    - name: Build and install collection
      run: |
        ansible-galaxy collection build .
        ansible-galaxy collection install effectivelywild-technitium_dns-*.tar.gz

    - name: Run specific module test
      env:
        TECHNITIUM_API_URL: ${{ secrets.TECHNITIUM_API_URL }}
        TECHNITIUM_API_TOKEN: ${{ secrets.TECHNITIUM_API_TOKEN }}
        TECHNITIUM_API_PORT: ${{ secrets.TECHNITIUM_API_PORT || '5380' }}
        VALIDATE_CERTS: ${{ secrets.VALIDATE_CERTS || 'false' }}
        NOTIFY_NAME_SERVER: ${{ secrets.NOTIFY_NAME_SERVER }}
        DEBUG: ${{ secrets.DEBUG || 'true' }}
      run: |
        cd ~/.ansible/collections/ansible_collections/effectivelywild/technitium_dns
        ansible-playbook -i tests/integration/inventory \
          roles/test_utils/playbooks/run_dns_${{ inputs.module_name | replace('technitium_dns_', '') }}_integration_test.yml -vv
      if: ${{ env.TECHNITIUM_API_URL != '' && env.TECHNITIUM_API_TOKEN != '' }}

    - name: Skip test (missing credentials)
      run: |
        echo "::error::Cannot run integration test - missing required secrets"
        echo "Required secrets: TECHNITIUM_API_URL, TECHNITIUM_API_TOKEN"
        exit 1
      if: ${{ env.TECHNITIUM_API_URL == '' || env.TECHNITIUM_API_TOKEN == '' }}