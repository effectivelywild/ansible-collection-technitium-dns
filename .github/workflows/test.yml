---
name: Test Ansible Collection

# When should this run?
on:
  push:                    # Every time you push code
  pull_request:           # Every time someone makes a PR
  workflow_dispatch:      # Manual trigger button in GitHub

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Get the code
    - name: Download code
      uses: actions/checkout@v4
    
    # 2. Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    # 3. Install what we need
    - name: Install dependencies
      run: |
        pip install ansible docker requests urllib3
    
    # 4. Build our collection
    - name: Build collection
      run: |
        ansible-galaxy collection build .
        ansible-galaxy collection install effectivelywild-technitium_dns-*.tar.gz
    
    # 5. Start up Technitium DNS containers for testing
    - name: Start test servers and get API tokens
      run: |
        cd ~/.ansible/collections/ansible_collections/effectivelywild/technitium_dns

        export TESTING_SUFFIX="example.com"

        ansible-playbook -i tests/integration/inventory \
          roles/test_utils/playbooks/run_setup_testing_env.yml -v
        
        # Wait for servers to be ready
        sleep 30
        
        # Check if they're working and tokens are available
        curl http://localhost:5381/api/dashboard/stats/get || echo "Server not ready yet"
        
        # Show token files were created
        ls -la /tmp/technitium*_token || echo "Token files not found"
    
    # 6. Run all our tests
    - name: Run integration tests
      run: |
        cd ~/.ansible/collections/ansible_collections/effectivelywild/technitium_dns
        
        # Use the generated API token
        export TECHNITIUM_API_TOKEN=$(cat /tmp/technitium02_token)
        export TECHNITIUM_API_URL="http://localhost"
        export TECHNITIUM_API_PORT="5382"
        export NOTIFY_NAME_SERVER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' technitium01)
        export VALIDATE_CERTS="false"
        export DEBUG="false"
        export TESTING_SUFFIX="example.com"

        ansible-playbook roles/test_utils/playbooks/run_all_integration_tests.yml -v

    # 7. Clean up (always runs, even if tests fail)
    - name: Clean up containers
      if: always()
      run: |
        docker stop technitium01 technitium02 || true
        docker rm technitium01 technitium02 || true
        docker volume rm technitium01-config technitium02-config || true