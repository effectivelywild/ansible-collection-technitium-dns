---
# Integration test for technitium_dns_delete_record (FWD records)
# Structure and variables match test_add_fwd_records.yml

- name: "Define FWD test records to delete (forwarder zone only)"
  ansible.builtin.set_fact:
    delete_fwd_test_records:
      - { idx: 1, name: basic-fwd,   protocol: Udp, forwarder: 192.0.2.10,   forwarderPriority: 10, comments: "Basic FWD with priority", zone: "{{ forwarder_zone_name }}" }
      - { idx: 2, name: proxy-fwd,   protocol: Udp, forwarder: 2001:db8::20, forwarderPriority: 20, proxyType: Http, proxyAddress: proxy.example.com, proxyPort: 8080, proxyUsername: user1, proxyPassword: pass1, zone: "{{ forwarder_zone_name }}" }
      - { idx: 3, name: dnssec-fwd,  protocol: Udp, forwarder: 192.0.2.30,   forwarderPriority: 5,  dnssecValidation: true, comments: "DNSSEC validating forwarder", zone: "{{ forwarder_zone_name }}" }

# Phase 1: Create the records (using add module)
- name: "Create FWD records to be deleted"
  technitium_dns_add_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: FWD
    protocol: "{{ rec.protocol }}"
    forwarder: "{{ rec.forwarder }}"
    forwarderPriority: "{{ rec.forwarderPriority }}"
    dnssecValidation: "{{ rec.dnssecValidation | default(omit) }}"
    proxyType: "{{ rec.proxyType | default(omit) }}"
    proxyAddress: "{{ rec.proxyAddress | default(omit) }}"
    proxyPort: "{{ rec.proxyPort | default(omit) }}"
    proxyUsername: "{{ rec.proxyUsername | default(omit) }}"
    proxyPassword: "{{ rec.proxyPassword | default(omit) }}"
    ttl: "{{ rec.ttl | default(omit) }}"
    comments: "{{ rec.comments | default(omit) }}"
  loop: "{{ delete_fwd_test_records }}"
  loop_control:
    loop_var: rec
    label: "Create: {{ rec.idx }}-{{ rec.name }}.{{ rec.zone }}"
  register: create_fwd_results

- name: "Assert FWD records created"
  ansible.builtin.assert:
    that:
      - (create_fwd_results.results | map(attribute='changed') | list | unique) == [ true ]

# Phase 2: Check mode - plan deletion
- name: "Plan delete FWD records (check mode)"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: FWD
    protocol: "{{ rec.protocol }}"
    forwarder: "{{ rec.forwarder }}"
    forwarderPriority: "{{ rec.forwarderPriority }}"
    dnssecValidation: "{{ rec.dnssecValidation | default(omit) }}"
    proxyType: "{{ rec.proxyType | default(omit) }}"
    proxyAddress: "{{ rec.proxyAddress | default(omit) }}"
    proxyPort: "{{ rec.proxyPort | default(omit) }}"
    proxyUsername: "{{ rec.proxyUsername | default(omit) }}"
    proxyPassword: "{{ rec.proxyPassword | default(omit) }}"
  check_mode: true
  loop: "{{ delete_fwd_test_records }}"
  loop_control:
    loop_var: rec
    label: "PlanDelete: {{ rec.name }}.{{ rec.zone }}"
  register: plan_delete_fwd_results

- name: "Assert all delete plans report changed"
  ansible.builtin.assert:
    that:
      - (plan_delete_fwd_results.results | map(attribute='changed') | list | unique) == [ true ]

# Phase 3: Delete the records
- name: "Delete FWD records"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: FWD
    protocol: "{{ rec.protocol }}"
    forwarder: "{{ rec.forwarder }}"
    forwarderPriority: "{{ rec.forwarderPriority }}"
    dnssecValidation: "{{ rec.dnssecValidation | default(omit) }}"
    proxyType: "{{ rec.proxyType | default(omit) }}"
    proxyAddress: "{{ rec.proxyAddress | default(omit) }}"
    proxyPort: "{{ rec.proxyPort | default(omit) }}"
    proxyUsername: "{{ rec.proxyUsername | default(omit) }}"
    proxyPassword: "{{ rec.proxyPassword | default(omit) }}"
  loop: "{{ delete_fwd_test_records }}"
  loop_control:
    loop_var: rec
    label: "Delete: {{ rec.idx }}-{{ rec.name }}.{{ rec.zone }}"
  register: delete_fwd_results

- name: "Assert FWD records deleted"
  ansible.builtin.assert:
    that:
      - (delete_fwd_results.results | map(attribute='changed') | list | unique) == [ true ]

# Phase 4: Check mode - plan deletion again (should be no changes)
- name: "Plan delete FWD records again (check mode, after deletion)"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: FWD
    protocol: "{{ rec.protocol }}"
    forwarder: "{{ rec.forwarder }}"
    forwarderPriority: "{{ rec.forwarderPriority }}"
    dnssecValidation: "{{ rec.dnssecValidation | default(omit) }}"
    proxyType: "{{ rec.proxyType | default(omit) }}"
    proxyAddress: "{{ rec.proxyAddress | default(omit) }}"
    proxyPort: "{{ rec.proxyPort | default(omit) }}"
    proxyUsername: "{{ rec.proxyUsername | default(omit) }}"
    proxyPassword: "{{ rec.proxyPassword | default(omit) }}"
  check_mode: true
  loop: "{{ delete_fwd_test_records }}"
  loop_control:
    loop_var: rec
    label: "PlanDeleteAgain: {{ rec.name }}.{{ rec.zone }}"
  register: plan_delete_fwd_again_results

- name: "Assert all delete plans after deletion report no changes"
  ansible.builtin.assert:
    that:
      - (plan_delete_fwd_again_results.results | map(attribute='changed') | list | unique) == [ false ]

# Phase 5: Verify record doesn't exist with get_record
- name: "Fetch records for absence (get_records)"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "{{ rec.zone }}"
  loop: "{{ delete_fwd_test_records }}"
  loop_control:
    loop_var: rec
    label: "Get(absent): {{ rec.name }}.{{ rec.zone }}"
  register: absent_get_results

- name: Debug absent_get_results
  ansible.builtin.debug:
    var: absent_get_results
  when: debug | default(false)

- name: "Assert absence (no pre-existing FWD record by name)"
  ansible.builtin.assert:
    that:
      - >-
        (item.records | default([])
         | selectattr('type','equalto','FWD')
         | selectattr('name','equalto', (item.rec.name ~ '.' ~ item.rec.zone))
         | list | length) == 0
    quiet: true
  loop: "{{ absent_get_results.results }}"
  loop_control:
    label: "AbsentAssert: {{ item.rec.name }}.{{ item.rec.zone }}"

# Phase 6: Idempotency - rerun delete (should be no changes)
- name: "Idempotency: Re-run delete FWD records"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: FWD
    protocol: "{{ rec.protocol }}"
    forwarder: "{{ rec.forwarder }}"
    forwarderPriority: "{{ rec.forwarderPriority }}"
    dnssecValidation: "{{ rec.dnssecValidation | default(omit) }}"
    proxyType: "{{ rec.proxyType | default(omit) }}"
    proxyAddress: "{{ rec.proxyAddress | default(omit) }}"
    proxyPort: "{{ rec.proxyPort | default(omit) }}"
    proxyUsername: "{{ rec.proxyUsername | default(omit) }}"
    proxyPassword: "{{ rec.proxyPassword | default(omit) }}"
  loop: "{{ delete_fwd_test_records }}"
  loop_control:
    loop_var: rec
    label: "IdempotentDelete: {{ rec.name }}.{{ rec.zone }}"
  register: idempotent_delete_fwd_results

- name: "Assert idempotent delete reports no changes"
  ansible.builtin.assert:
    that:
      - (idempotent_delete_fwd_results.results | map(attribute='changed') | list | unique) == [ false ]

# Phase 7: Negative tests
- name: "Negative: missing required forwarder param"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "neg-missing-forwarder.{{ forwarder_zone_name }}"
    zone: "{{ forwarder_zone_name }}"
    type: FWD
    protocol: Udp
  register: neg_delete_fwd_missing_forwarder
  ignore_errors: true

- name: "Assert failure of missing forwarder param"
  ansible.builtin.assert:
    that:
      - neg_delete_fwd_missing_forwarder.failed
      - "'forwarder' in (neg_delete_fwd_missing_forwarder.msg | default(''))"

- name: "Negative: unsupported param for FWD (cname)"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: "{{ technitium_api_token }}"
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "bad-param-fwd.{{ forwarder_zone_name }}"
    zone: "{{ forwarder_zone_name }}"
    type: FWD
    protocol: Udp
    forwarder: 192.0.2.200
    cname: other.example.com
  register: neg_delete_fwd_bad_param
  ignore_errors: true

- name: "Assert failure of unsupported param"
  ansible.builtin.assert:
    that:
      - neg_delete_fwd_bad_param.failed
      - "'cname' in (neg_delete_fwd_bad_param.msg | default(''))"

- name: "Negative: invalid API token"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url | default('http://localhost') }}"
    api_token: BADTOKEN
    api_port: "{{ technitium_api_port | default(5380) }}"
    name: "bad-token-fwd.{{ forwarder_zone_name }}"
    zone: "{{ forwarder_zone_name }}"
    type: FWD
    protocol: Udp
    forwarder: 192.0.2.210
  register: neg_delete_fwd_bad_token
  ignore_errors: true

- name: "Assert failure of invalid API token"
  ansible.builtin.assert:
    that:
      - neg_delete_fwd_bad_token.failed
      - "'Invalid token' in (neg_delete_fwd_bad_token.msg)"
