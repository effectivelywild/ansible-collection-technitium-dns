---
# Integration test for technitium_dns_delete_record (CAA records)
# Structure and variables match test_add_caa_records.yml

- name: "Define CAA test records to delete"
  ansible.builtin.set_fact:
    delete_caa_test_records:
      - { idx: 1, name: basic-caa,   flags: "0",   tag: issue,  value: "letsencrypt.org",             ttl: 3600,  zone: "{{ primary_zone_name }}" }
      - { idx: 2, name: longttl-caa, flags: "128", tag: issue,  value: "pki.goog",                    ttl: 86400, zone: "{{ primary_sec_zone_name }}" }
      - { idx: 3, name: comment-caa, flags: "0",   tag: iodef,  value: "mailto:admin@example.com",    ttl: 7200, comments: "CAA record with comment", zone: "{{ primary_zone_name }}" }

# Phase 1: Create the records (using add module)
- name: "Create CAA records to be deleted"
  technitium_dns_add_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: CAA
    flags: "{{ rec.flags }}"
    tag: "{{ rec.tag }}"
    value: "{{ rec.value }}"
    ttl: "{{ rec.ttl | default(omit) }}"
    comments: "{{ rec.comments | default(omit) }}"
  loop: "{{ delete_caa_test_records }}"
  loop_control:
    loop_var: rec
    label: "Create: {{ rec.idx }}-{{ rec.name }}.{{ rec.zone }}"
  register: create_caa_results

- name: "Assert CAA records created"
  ansible.builtin.assert:
    that:
      - (create_caa_results.results | map(attribute='changed') | list | unique) == [ true ]

# Phase 2: Check mode - plan deletion
- name: "Plan delete CAA records (check mode)"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: CAA
    flags: "{{ rec.flags }}"
    tag: "{{ rec.tag }}"
    value: "{{ rec.value }}"
  check_mode: true
  loop: "{{ delete_caa_test_records }}"
  loop_control:
    loop_var: rec
    label: "PlanDelete: {{ rec.name }}.{{ rec.zone }}"
  register: plan_delete_caa_results

- name: "Assert all delete plans report changed"
  ansible.builtin.assert:
    that:
      - (plan_delete_caa_results.results | map(attribute='changed') | list | unique) == [ true ]

# Phase 3: Delete the records
- name: "Delete CAA records"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: CAA
    flags: "{{ rec.flags }}"
    tag: "{{ rec.tag }}"
    value: "{{ rec.value }}"
  loop: "{{ delete_caa_test_records }}"
  loop_control:
    loop_var: rec
    label: "Delete: {{ rec.idx }}-{{ rec.name }}.{{ rec.zone }}"
  register: delete_caa_results

- name: "Assert CAA records deleted"
  ansible.builtin.assert:
    that:
      - (delete_caa_results.results | map(attribute='changed') | list | unique) == [ true ]

# Phase 4: Check mode - plan deletion again (should be no changes)
- name: "Plan delete CAA records again (check mode, after deletion)"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: CAA
    flags: "{{ rec.flags }}"
    tag: "{{ rec.tag }}"
    value: "{{ rec.value }}"
  check_mode: true
  loop: "{{ delete_caa_test_records }}"
  loop_control:
    loop_var: rec
    label: "PlanDeleteAgain: {{ rec.name }}.{{ rec.zone }}"
  register: plan_delete_caa_again_results

- name: "Assert all delete plans after deletion report no changes"
  ansible.builtin.assert:
    that:
      - (plan_delete_caa_again_results.results | map(attribute='changed') | list | unique) == [ false ]

# Phase 5: Verify record doesn't exist with get_record
- name: "Fetch records for absence (get_records)"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "{{ rec.zone }}"
  loop: "{{ delete_caa_test_records }}"
  loop_control:
    loop_var: rec
    label: "Get(absent): {{ rec.name }}.{{ rec.zone }}"
  register: absent_get_results

- name: Debug absent_get_results
  ansible.builtin.debug:
    var: absent_get_results
  when: debug | default(false)

- name: "Assert absence (no pre-existing CAA record by name)"
  ansible.builtin.assert:
    that:
      - >-
        (item.records | default([])
         | selectattr('type','equalto','CAA')
         | selectattr('name','equalto', (item.rec.name ~ '.' ~ item.rec.zone))
         | list | length) == 0
    quiet: true
  loop: "{{ absent_get_results.results }}"
  loop_control:
    label: "AbsentAssert: {{ item.rec.name }}.{{ item.rec.zone }}"

# Phase 6: Idempotency - rerun delete (should be no changes)
- name: "Idempotency: Re-run delete CAA records"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "{{ rec.name }}.{{ rec.zone }}"
    zone: "{{ rec.zone }}"
    type: CAA
    flags: "{{ rec.flags }}"
    tag: "{{ rec.tag }}"
    value: "{{ rec.value }}"
  loop: "{{ delete_caa_test_records }}"
  loop_control:
    loop_var: rec
    label: "IdempotentDelete: {{ rec.name }}.{{ rec.zone }}"
  register: idempotent_delete_caa_results

- name: "Assert idempotent delete reports no changes"
  ansible.builtin.assert:
    that:
      - (idempotent_delete_caa_results.results | map(attribute='changed') | list | unique) == [ false ]

# Phase 7: Negative tests
- name: "Negative: missing required flags param"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "neg-missing-flags-caa.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: CAA
    tag: issue
    value: "letsencrypt.org"
  register: neg_delete_caa_missing_flags
  ignore_errors: true

- name: "Assert failure of missing flags param"
  ansible.builtin.assert:
    that:
      - neg_delete_caa_missing_flags.failed
      - "'flags' in (neg_delete_caa_missing_flags.msg | default(''))"

- name: "Negative: unsupported param for CAA (ipAddress)"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "bad-param-caa.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: CAA
    flags: "0"
    tag: issue
    value: "letsencrypt.org"
    ipAddress: 192.0.2.99
  register: neg_delete_caa_bad_param
  ignore_errors: true

- name: "Assert failure of unsupported param"
  ansible.builtin.assert:
    that:
      - neg_delete_caa_bad_param.failed
      - "'ipAddress' in (neg_delete_caa_bad_param.msg | default(''))"

- name: "Negative: invalid API token"
  technitium_dns_delete_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: BADTOKEN
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "bad-token-caa.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: CAA
    flags: "0"
    tag: issue
    value: "letsencrypt.org"
  register: neg_delete_caa_bad_token
  ignore_errors: true

- name: "Assert failure of invalid API token"
  ansible.builtin.assert:
    that:
      - neg_delete_caa_bad_token.failed
      - "'Invalid token' in (neg_delete_caa_bad_token.msg)"
