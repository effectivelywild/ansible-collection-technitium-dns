---
# DS (Delegation Signer) Record Tests for technitium_dns_record module
# NOTE: DS records support multiple records per DNS name (RFC 4035)
# Multiple DS records are used for key rollover and multi-signer DNSSEC

# =============================================================================
# Test 1: Shorthand Single Record - Create, Update, Delete
# =============================================================================
- name: "Test 1.1: Create single DS record using shorthand syntax"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "secure.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    keyTag: 12345
    algorithm: "RSASHA256"
    digestType: "SHA256"
    digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
    ttl: 3600
    comments: "Created via shorthand"
    state: present
  register: test1_create

- name: "Test 1.1: Assert record was created"
  ansible.builtin.assert:
    that:
      - test1_create is changed

- name: "Test 1.2: Verify record exists with correct values"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "secure.{{ primary_zone_name }}"
  register: test1_verify

- name: "Test 1.2: Assert record values"
  ansible.builtin.assert:
    that:
      - test1_verify.records | length == 1
      - test1_verify.records[0].type == 'DS'
      - test1_verify.records[0].rData.keyTag == 12345
      - test1_verify.records[0].rData.algorithm == 'RSASHA256'
      - test1_verify.records[0].ttl == 3600

- name: "Test 1.3: Idempotency - Run same create again"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "secure.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    keyTag: 12345
    algorithm: "RSASHA256"
    digestType: "SHA256"
    digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
    ttl: 3600
    comments: "Created via shorthand"
    state: present
  register: test1_idempotent

- name: "Test 1.3: Assert no changes"
  ansible.builtin.assert:
    that:
      - test1_idempotent is not changed

- name: "Test 1.4: Delete record using shorthand"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "secure.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    state: absent
  register: test1_delete

- name: "Test 1.4: Assert deletion succeeded"
  ansible.builtin.assert:
    that:
      - test1_delete is changed

- name: "Test 1.5: Verify record was deleted"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "secure.{{ primary_zone_name }}"
  register: test1_verify_delete
  ignore_errors: true

- name: "Test 1.5: Assert record is gone"
  ansible.builtin.assert:
    that:
      - test1_verify_delete is failed

# =============================================================================
# Test 2: Multiple Records in a Set - Key Rollover Scenario
# =============================================================================
- name: "Test 2.1: Create multiple DS records (key rollover)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "multi-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    ttl: 7200
    records:
      - keyTag: 12345
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
      - keyTag: 12345
        algorithm: "RSASHA256"
        digestType: "SHA384"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
      - keyTag: 54321
        algorithm: "ECDSAP256SHA256"
        digestType: "SHA256"
        digest: "B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3"
    state: present
  register: test2_create

- name: "Test 2.1: Assert records were created"
  ansible.builtin.assert:
    that:
      - test2_create is changed

- name: "Test 2.2: Verify all 3 records exist"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "multi-ds.{{ primary_zone_name }}"
  register: test2_verify

- name: "Test 2.2: Assert 3 DS records exist"
  ansible.builtin.assert:
    that:
      - test2_verify.records | length == 3
      - test2_verify.records | selectattr('rData.keyTag', 'equalto', 12345) | list | length == 2
      - test2_verify.records | selectattr('rData.keyTag', 'equalto', 54321) | list | length == 1

- name: "Test 2.3: Idempotency - Run same create again"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "multi-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    ttl: 7200
    records:
      - keyTag: 12345
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
      - keyTag: 12345
        algorithm: "RSASHA256"
        digestType: "SHA384"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
      - keyTag: 54321
        algorithm: "ECDSAP256SHA256"
        digestType: "SHA256"
        digest: "B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3"
    state: present
  register: test2_idempotent

- name: "Test 2.3: Assert no changes"
  ansible.builtin.assert:
    that:
      - test2_idempotent is not changed

- name: "Test 2.4: Delete entire record set"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "multi-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    state: absent
  register: test2_delete

- name: "Test 2.4: Assert deletion succeeded"
  ansible.builtin.assert:
    that:
      - test2_delete is changed

# =============================================================================
# Test 3: Overwrite Mode - Replace Entire Set
# =============================================================================
- name: "Test 3.1: Create initial set of DS records"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    ttl: 3600
    records:
      - keyTag: 11111
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
      - keyTag: 22222
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3"
    state: present
  register: test3_create

- name: "Test 3.1: Assert initial records were created"
  ansible.builtin.assert:
    that:
      - test3_create is changed

- name: "Test 3.2: Overwrite with completely different set (overwrite=true)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    ttl: 7200
    overwrite: true
    records:
      - keyTag: 99999
        algorithm: "ECDSAP256SHA256"
        digestType: "SHA256"
        digest: "C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4"
    state: present
  register: test3_overwrite

- name: "Test 3.2: Assert overwrite was applied"
  ansible.builtin.assert:
    that:
      - test3_overwrite is changed

- name: "Test 3.3: Verify only new records exist"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-ds.{{ primary_zone_name }}"
  register: test3_verify

- name: "Test 3.3: Assert only replacement records exist"
  ansible.builtin.assert:
    that:
      - test3_verify.records | length == 1
      - test3_verify.records[0].rData.keyTag == 99999
      - test3_verify.records | selectattr('rData.keyTag', 'equalto', 11111) | list | length == 0

- name: "Test 3.4: Delete overwrite test records"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    state: absent
  register: test3_delete

# =============================================================================
# Test 4: Additive Mode - Merge with Existing Records
# =============================================================================
- name: "Test 4.1: Create initial set of DS records"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "additive-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    ttl: 3600
    records:
      - keyTag: 11111
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
    state: present
  register: test4_create

- name: "Test 4.1: Assert initial records were created"
  ansible.builtin.assert:
    that:
      - test4_create is changed

- name: "Test 4.2: Add new records with overwrite=false (additive)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "additive-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    ttl: 3600
    overwrite: false
    records:
      - keyTag: 22222
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3"
    state: present
  register: test4_add

- name: "Test 4.2: Assert new records were added"
  ansible.builtin.assert:
    that:
      - test4_add is changed

- name: "Test 4.3: Verify all records present (old + new)"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "additive-ds.{{ primary_zone_name }}"
  register: test4_verify

- name: "Test 4.3: Assert 2 total records (1 old + 1 new)"
  ansible.builtin.assert:
    that:
      - test4_verify.records | length == 2
      - test4_verify.records | selectattr('rData.keyTag', 'equalto', 11111) | list | length == 1
      - test4_verify.records | selectattr('rData.keyTag', 'equalto', 22222) | list | length == 1

- name: "Test 4.4: Delete additive test records"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "additive-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    state: absent
  register: test4_delete

# =============================================================================
# Test 5: Selective Deletion - Delete Specific Records from Set
# =============================================================================
- name: "Test 5.1: Create set of 3 DS records"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "selective-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    ttl: 3600
    records:
      - keyTag: 11111
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
      - keyTag: 22222
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3"
      - keyTag: 33333
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4"
    state: present
  register: test5_create

- name: "Test 5.2: Delete specific record (keyTag 22222)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "selective-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    records:
      - keyTag: 22222
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3"
    state: absent
  register: test5_delete_specific

- name: "Test 5.2: Assert specific record was deleted"
  ansible.builtin.assert:
    that:
      - test5_delete_specific is changed

- name: "Test 5.3: Verify only specified record deleted"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "selective-ds.{{ primary_zone_name }}"
  register: test5_verify

- name: "Test 5.3: Assert only 2 records remain"
  ansible.builtin.assert:
    that:
      - test5_verify.records | length == 2
      - test5_verify.records | selectattr('rData.keyTag', 'equalto', 11111) | list | length == 1
      - test5_verify.records | selectattr('rData.keyTag', 'equalto', 33333) | list | length == 1

- name: "Test 5.4: Delete remaining records"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "selective-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    state: absent
  register: test5_delete_all

# =============================================================================
# Test 6: Check Mode
# =============================================================================
- name: "Test 6.1: Check mode - Create"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "check-mode-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    keyTag: 12345
    algorithm: "RSASHA256"
    digestType: "SHA256"
    digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
    ttl: 3600
    state: present
  check_mode: true
  register: test6_check

- name: "Test 6.1: Assert check mode reports change"
  ansible.builtin.assert:
    that:
      - test6_check is changed

- name: "Test 6.2: Verify record was not created"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "check-mode-ds.{{ primary_zone_name }}"
  register: test6_verify
  ignore_errors: true

- name: "Test 6.2: Assert record doesn't exist"
  ansible.builtin.assert:
    that:
      - test6_verify is failed

# =============================================================================
# Test 7: Negative Tests - Missing Parameters
# =============================================================================
- name: "Test 7.1: Missing keyTag with shorthand (state=present)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "missing-keytag.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    algorithm: "RSASHA256"
    digestType: "SHA256"
    digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
    ttl: 3600
    state: present
  register: test7_missing_keytag
  ignore_errors: true

- name: "Test 7.1: Assert missing parameter error"
  ansible.builtin.assert:
    that:
      - test7_missing_keytag is failed
      - test7_missing_keytag.msg is search("No records specified|keyTag")

- name: "Test 7.2: Missing required field in records list"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "missing-field.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    records:
      - keyTag: 12345
        algorithm: "RSASHA256"
        digestType: "SHA256"
    state: present
  register: test7_missing_field
  ignore_errors: true

- name: "Test 7.2: Assert missing field error"
  ansible.builtin.assert:
    that:
      - test7_missing_field is failed
      - test7_missing_field.msg is search("missing required field.*digest")

# =============================================================================
# Test 8: Negative Tests - Unsupported Parameters
# =============================================================================
- name: "Test 8.1: Unsupported parameter for DS record (ipAddress)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "bad-param.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    keyTag: 12345
    algorithm: "RSASHA256"
    digestType: "SHA256"
    digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
    ipAddress: "192.0.2.1"
    state: present
  register: test8_bad_param
  ignore_errors: true

- name: "Test 8.1: Assert unsupported parameter error"
  ansible.builtin.assert:
    that:
      - test8_bad_param is failed
      - test8_bad_param.msg is search("not supported")

- name: "Test 8.2: Unsupported parameter in records list"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "bad-param2.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    records:
      - keyTag: 12345
        algorithm: "RSASHA256"
        digestType: "SHA256"
        digest: "A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2C3D4E5F6A1B2"
        cname: "invalid.example.com"
    state: present
  register: test8_bad_field
  ignore_errors: true

- name: "Test 8.2: Assert unsupported field error"
  ansible.builtin.assert:
    that:
      - test8_bad_field is failed
      - test8_bad_field.msg is search("contains unsupported field")

# =============================================================================
# Test 9: Negative Tests - Delete Operations
# =============================================================================
- name: "Test 9.1: Delete non-existent DS record (idempotent)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "nonexistent-ds.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DS
    state: absent
  register: test9_delete_nonexistent

- name: "Test 9.1: Assert no changes"
  ansible.builtin.assert:
    that:
      - test9_delete_nonexistent is not changed

- name: "Test Completion Message"
  ansible.builtin.debug:
    msg: "DS Record tests completed successfully!"
