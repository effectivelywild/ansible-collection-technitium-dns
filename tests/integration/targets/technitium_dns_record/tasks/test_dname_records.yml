---
# DNAME Record Tests for technitium_dns_record module
# NOTE: DNAME records are SINGLETON records (DNS standard - RFC 6672)
# DNAME provides delegation for entire subtrees (similar to CNAME but for subdomains)

# =============================================================================
# Test 1: Shorthand Single Record - Create, Update, Delete
# =============================================================================
- name: "Test 1.1: Create single DNAME record using shorthand syntax"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    dname: "target.{{ primary_zone_name }}"
    ttl: 3600
    comments: "Created via shorthand"
    state: present
  register: test1_create

- name: "Test 1.1: Assert record was created"
  ansible.builtin.assert:
    that:
      - test1_create is changed

- name: "Test 1.2: Verify record exists with correct values"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "subdomain.{{ primary_zone_name }}"
  register: test1_verify

- name: "Test 1.2: Assert record values"
  ansible.builtin.assert:
    that:
      - test1_verify.records | length == 1
      - test1_verify.records[0].type == 'DNAME'
      - test1_verify.records[0].rData.dname == 'target.' + primary_zone_name
      - test1_verify.records[0].ttl == 3600

- name: "Test 1.3: Idempotency - Run same create again"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    dname: "target.{{ primary_zone_name }}"
    ttl: 3600
    comments: "Created via shorthand"
    state: present
  register: test1_idempotent

- name: "Test 1.3: Assert no changes"
  ansible.builtin.assert:
    that:
      - test1_idempotent is not changed

- name: "Test 1.4: Update dname target (overwrite=true by default)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    dname: "newtarget.{{ primary_zone_name }}"
    ttl: 3600
    comments: "Updated via shorthand"
    state: present
  register: test1_update

- name: "Test 1.4: Assert update was applied"
  ansible.builtin.assert:
    that:
      - test1_update is changed

- name: "Test 1.5: Verify updated dname target"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "subdomain.{{ primary_zone_name }}"
  register: test1_verify_update

- name: "Test 1.5: Assert dname target was updated"
  ansible.builtin.assert:
    that:
      - test1_verify_update.records | length == 1
      - test1_verify_update.records[0].rData.dname == 'newtarget.' + primary_zone_name

- name: "Test 1.6: Delete record using shorthand"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    state: absent
  register: test1_delete

- name: "Test 1.6: Assert deletion succeeded"
  ansible.builtin.assert:
    that:
      - test1_delete is changed

- name: "Test 1.7: Verify record was deleted"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "subdomain.{{ primary_zone_name }}"
  register: test1_verify_delete
  ignore_errors: true

- name: "Test 1.7: Assert record is gone"
  ansible.builtin.assert:
    that:
      - test1_verify_delete is failed

# =============================================================================
# Test 2: Records List Syntax - Single Record
# =============================================================================
- name: "Test 2.1: Create DNAME record using records list syntax"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "list-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    ttl: 7200
    records:
      - dname: "list-target.{{ primary_zone_name }}"
    state: present
  register: test2_create

- name: "Test 2.1: Assert record was created"
  ansible.builtin.assert:
    that:
      - test2_create is changed

- name: "Test 2.2: Verify record exists"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "list-subdomain.{{ primary_zone_name }}"
  register: test2_verify

- name: "Test 2.2: Assert record values"
  ansible.builtin.assert:
    that:
      - test2_verify.records | length == 1
      - test2_verify.records[0].rData.dname == 'list-target.' + primary_zone_name
      - test2_verify.records[0].ttl == 7200

- name: "Test 2.3: Idempotency with records list"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "list-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    ttl: 7200
    records:
      - dname: "list-target.{{ primary_zone_name }}"
    state: present
  register: test2_idempotent

- name: "Test 2.3: Assert no changes"
  ansible.builtin.assert:
    that:
      - test2_idempotent is not changed

- name: "Test 2.4: Delete using records list"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "list-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    state: absent
  register: test2_delete

- name: "Test 2.4: Assert deletion succeeded"
  ansible.builtin.assert:
    that:
      - test2_delete is changed

# =============================================================================
# Test 3: Overwrite Mode - Replace Existing Record
# =============================================================================
- name: "Test 3.1: Create initial DNAME record"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    dname: "original-target.{{ primary_zone_name }}"
    ttl: 3600
    state: present
  register: test3_create

- name: "Test 3.1: Assert record was created"
  ansible.builtin.assert:
    that:
      - test3_create is changed

- name: "Test 3.2: Overwrite with different target (overwrite=true)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    dname: "replacement-target.{{ primary_zone_name }}"
    ttl: 7200
    overwrite: true
    state: present
  register: test3_overwrite

- name: "Test 3.2: Assert overwrite was applied"
  ansible.builtin.assert:
    that:
      - test3_overwrite is changed

- name: "Test 3.3: Verify only new record exists"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-subdomain.{{ primary_zone_name }}"
  register: test3_verify

- name: "Test 3.3: Assert only replacement record exists"
  ansible.builtin.assert:
    that:
      - test3_verify.records | length == 1
      - test3_verify.records[0].rData.dname == 'replacement-target.' + primary_zone_name
      - test3_verify.records[0].ttl == 7200

- name: "Test 3.4: Delete overwrite test record"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "overwrite-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    state: absent
  register: test3_delete

# =============================================================================
# Test 4: Check Mode
# =============================================================================
- name: "Test 4.1: Check mode - Create"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "check-mode-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    dname: "check-target.{{ primary_zone_name }}"
    ttl: 3600
    state: present
  check_mode: true
  register: test4_check

- name: "Test 4.1: Assert check mode reports change"
  ansible.builtin.assert:
    that:
      - test4_check is changed

- name: "Test 4.2: Verify record was not created"
  technitium_dns_get_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "check-mode-subdomain.{{ primary_zone_name }}"
  register: test4_verify
  ignore_errors: true

- name: "Test 4.2: Assert record doesn't exist"
  ansible.builtin.assert:
    that:
      - test4_verify is failed

# =============================================================================
# Test 5: Negative Tests - Missing Parameters
# =============================================================================
- name: "Test 5.1: Missing dname with shorthand (state=present)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "missing-dname.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    ttl: 3600
    state: present
  register: test5_missing_dname
  ignore_errors: true

- name: "Test 5.1: Assert missing parameter error"
  ansible.builtin.assert:
    that:
      - test5_missing_dname is failed
      - test5_missing_dname.msg is search("No records specified|dname")

- name: "Test 5.2: Missing required field in records list"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "missing-field.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    records:
      - ttl: 3600
    state: present
  register: test5_missing_field
  ignore_errors: true

- name: "Test 5.2: Assert missing field error"
  ansible.builtin.assert:
    that:
      - test5_missing_field is failed
      - test5_missing_field.msg is search("missing required field.*dname")

# =============================================================================
# Test 6: Negative Tests - Unsupported Parameters
# =============================================================================
- name: "Test 6.1: Unsupported parameter for DNAME record (ipAddress)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "bad-param.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    dname: "target.{{ primary_zone_name }}"
    ipAddress: "192.0.2.1"
    state: present
  register: test6_bad_param
  ignore_errors: true

- name: "Test 6.1: Assert unsupported parameter error"
  ansible.builtin.assert:
    that:
      - test6_bad_param is failed
      - test6_bad_param.msg is search("not supported")

- name: "Test 6.2: Unsupported parameter in records list"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "bad-param2.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    records:
      - dname: "target.{{ primary_zone_name }}"
        cname: "invalid.example.com"
    state: present
  register: test6_bad_field
  ignore_errors: true

- name: "Test 6.2: Assert unsupported field error"
  ansible.builtin.assert:
    that:
      - test6_bad_field is failed
      - test6_bad_field.msg is search("contains unsupported field")

# =============================================================================
# Test 7: Negative Tests - Singleton Validation
# =============================================================================
- name: "Test 7.1: Multiple records for singleton type (should fail)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "multi-singleton.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    records:
      - dname: "target1.{{ primary_zone_name }}"
      - dname: "target2.{{ primary_zone_name }}"
    state: present
  register: test7_multiple_singleton
  ignore_errors: true

- name: "Test 7.1: Assert singleton validation error"
  ansible.builtin.assert:
    that:
      - test7_multiple_singleton is failed
      - test7_multiple_singleton.msg is search("only support one record per DNS name")
      - test7_multiple_singleton.msg is search("singleton")

# =============================================================================
# Test 8: Negative Tests - Delete Operations
# =============================================================================
- name: "Test 8.1: Delete non-existent DNAME record (idempotent)"
  effectivelywild.technitium_dns.technitium_dns_record:
    api_url: "{{ technitium_api_url_2 | default('http://localhost') }}"
    api_token: "{{ technitium_api_token_2 }}"
    api_port: "{{ technitium_api_port_2 | default(5380) }}"
    name: "nonexistent-subdomain.{{ primary_zone_name }}"
    zone: "{{ primary_zone_name }}"
    type: DNAME
    state: absent
  register: test8_delete_nonexistent

- name: "Test 8.1: Assert no changes"
  ansible.builtin.assert:
    that:
      - test8_delete_nonexistent is not changed

- name: "Test Completion Message"
  ansible.builtin.debug:
    msg: "DNAME Record tests completed successfully!"
