---
- name: Convert dns_servers_to_create
  set_fact:
    dns_servers: "{{ dns_servers | default({}) | combine({ item.name: item }) }}"
  loop: "{{ dns_servers_to_create }}"

- name: "Create Technitium containers"
  community.docker.docker_container:
    name: "{{ item.name }}"
    image: technitium/dns-server
    state: started
    ports:
     - "{{ item.http_port }}:5380/tcp"
     - "{{ item.https_port }}:53443/tcp"
    volumes:
      - "{{ item.name }}-config:/etc/dns"
    restart_policy: unless-stopped
    sysctls:
      net.ipv4.ip_local_port_range: "1024 65000"
    env:
      DNS_SERVER_DOMAIN: "{{ dns_server_domain }}"
      DNS_SERVER_ADMIN_PASSWORD: "{{ dns_server_admin_password }}"
  loop: "{{ dns_servers_to_create }}"

- name: Create API token for both containers
  ansible.builtin.uri:
    url: "http://localhost:{{ item.http_port }}/api/user/createToken?user=admin&pass={{ dns_server_admin_password }}&tokenName=MyToken1"
    method: GET
  loop: "{{ dns_servers_to_create }}"
  register: api_token

- name: Set facts for each Technitium container
  set_fact:
    technitium_tokens: "{{ technitium_tokens | default({}) | combine({ item.item.name: {
      'token': item.json.token
    } }) }}"
  loop: "{{ api_token.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Print technitium_tokens
  ansible.builtin.debug:
    var: technitium_tokens

- name: Export tokens for use in GitHub Actions
  include_tasks: export_tokens.yml

- name: Set dynamic container names for zone operations
  set_fact:
    technitium01_name: "technitium01{{ lookup('env', 'CONTAINER_SUFFIX') | default('') }}"
    technitium02_name: "technitium02{{ lookup('env', 'CONTAINER_SUFFIX') | default('') }}"
    
- name: Create DNS zones of technitium01 for zone transfers
  ansible.builtin.uri:
    url: "http://localhost:{{ dns_servers[technitium01_name].http_port }}/api/zones/create?token={{ technitium_tokens[technitium01_name].token }}&zone={{ item.name }}&type={{ item.type }}"
  loop: "{{ t1_zones_to_create }}"

- name: Update zone options to allow zone transfers
  ansible.builtin.uri:
    url: "http://localhost:{{ dns_servers[technitium01_name].http_port }}/api/zones/options/set?token={{ technitium_tokens[technitium01_name].token }}&zone={{ item.name }}&zoneTransfer=Allow"
  loop: "{{ t1_zones_to_create }}"

- name: Create zones for early DNSSEC signing
  ansible.builtin.uri:
    url: "http://localhost:{{ dns_servers[technitium02_name].http_port }}/api/zones/create?token={{ technitium_tokens[technitium02_name].token }}&zone={{ item.name }}&type={{ item.type }}"
  loop: "{{ t2_zones_to_create }}"

- name: Reduce TTL on NS record (will reduce publishing time of keys)
  ansible.builtin.uri:
    url: "http://localhost:{{ dns_servers[technitium02_name].http_port }}/api/zones/records/update?token={{ technitium_tokens[technitium02_name].token }}&zone={{ item.name }}&type=NS&domain={{ item.name }}&ttl=1&nameServer={{ dns_server_domain }}"
  loop: "{{ t2_zones_to_create }}"

- name: Sign zones for early DNSSEC signing
  ansible.builtin.uri:
    url: "http://localhost:{{ dns_servers[technitium02_name].http_port }}/api/zones/dnssec/sign?token={{ technitium_tokens[technitium02_name].token }}&zone={{ item.name }}&dnsKeyTtl=1&algorithm=ECDSA&curve=P256&kskKeySize=&zskKeySize=&zskRolloverDays=30&nxProof=NSEC"
  loop: "{{ t2_zones_to_create }}"

# - name: Create new KSK key for rollover testing
#   ansible.builtin.uri:
#     url: http://localhost:{{ dns_servers[technitium02_name].http_port }}/api/zones/dnssec/properties/addPrivateKey?token={{ technitium_tokens[technitium02_name].token }}&zone=rollover-dnskey-test1.{{ lookup('env', 'TESTING_SUFFIX') | default('example.com') }}&keyType=KeySigningKey&algorithm=ECDSA&curve=P256&rolloverDays=0

# - name: Create new ZSK key for rollover testing
#   ansible.builtin.uri:
#     url: http://localhost:{{ dns_servers[technitium02_name].http_port }}/api/zones/dnssec/properties/addPrivateKey?token={{ technitium_tokens[technitium02_name].token }}&zone=rollover-dnskey-test1.{{ lookup('env', 'TESTING_SUFFIX') | default('example.com') }}&keyType=ZoneSigningKey&algorithm=ECDSA&curve=P256&rolloverDays=0

# - name: Publish new keys for rollover testing
#   ansible.builtin.uri:
#     url: http://localhost:{{ dns_servers[technitium02_name].http_port }}/api/zones/dnssec/properties/publishAllPrivateKeys?token={{ technitium_tokens[technitium02_name].token }}&zone=rollover-dnskey-test1.{{ lookup('env', 'TESTING_SUFFIX') | default('example.com') }}